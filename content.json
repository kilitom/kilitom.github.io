{"meta":{"title":"Kilitom","subtitle":"Kilitomの博客","description":"书中自有颜如玉,书中自有黄金屋","author":"Kilitom","url":"https://kilitom.github.io","root":"/"},"pages":[{"title":"404","date":"2018-09-30T09:25:30.000Z","updated":"2020-08-10T00:06:31.190Z","comments":true,"path":"404.html","permalink":"https://kilitom.github.io/404.html","excerpt":"","text":""},{"title":"about","date":"2018-09-30T09:25:30.000Z","updated":"2020-08-10T00:05:07.174Z","comments":true,"path":"about/index.html","permalink":"https://kilitom.github.io/about/index.html","excerpt":"","text":""},{"title":"contact","date":"2018-09-30T09:25:30.000Z","updated":"2020-08-10T00:05:40.989Z","comments":true,"path":"contact/index.html","permalink":"https://kilitom.github.io/contact/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-08-09T13:32:30.000Z","updated":"2020-08-10T00:05:22.586Z","comments":true,"path":"categories/index.html","permalink":"https://kilitom.github.io/categories/index.html","excerpt":"","text":""},{"title":"friends","date":"2018-12-12T13:25:30.000Z","updated":"2020-08-10T00:05:55.522Z","comments":true,"path":"friends/index.html","permalink":"https://kilitom.github.io/friends/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-09-30T10:23:38.000Z","updated":"2020-08-10T00:06:10.206Z","comments":true,"path":"tags/index.html","permalink":"https://kilitom.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Java入门","slug":"Java入门","date":"2020-08-09T11:23:20.000Z","updated":"2020-08-10T05:20:25.164Z","comments":true,"path":"2020/08/09/java-ru-men/","link":"","permalink":"https://kilitom.github.io/2020/08/09/java-ru-men/","excerpt":"","text":"了解JavaJava特点 ​ 简单性 ​ 面向对象性 ​ 分布式 ​ 健壮性 ​ 高性能 ​ 多线程 ​ 动态性 Java运行环境环境变量配置 ​ JAVA_HOME​ JAVA_HOME=JDK的安装路径(自己的安装路径C:\\Program Files\\Java\\jdk1.8.0_151) ​ Path(系统在任何路径都可以识别 java, javac命令)​ Path=%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin (系统自带的路径不要删掉) ​ CLASSPATH​ JAVA加载类路径，只有类在classpath中，java命令才能识别，在路径前加了个 “.”表示​ 当前路径 CLASSPATH=.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar JDK java 开发 工具包 /opt/jdk or /opt/jdk_1.6.01 ​ |– bin 开发工具(命令：java,javac,jar,javad,jar,rmic,jps…) ​ |– lib 开发工具的核心实现(tools.jar) ​ |– src.zip API的源文件 System.java ​ |– jre JRE Java运行环境 ​ |– lib (rt.jar) Java API(应用编程接口，系统类库) ​ | (java 提供的现成组件) System.class String.class … ​ |– bin (java_vm)JVM Java虚拟机JDK、JRE、JVM之间的关系 ​ JDK(Java Developer Kit) Java开发工具包 ​ JRE(Java Runtime Environment)Java运行环境 ​ JVM(Java Virtual Machine) Java虚拟机 三者关系： ​ JDK=JRE+Java开发工具 ​ JRE=JVM+Java类库 ​ JDK包含JRE，JRE包含JVM Java运行原理 ​ Java文件类型 ​ .java Java源文件 ​ .class 二进制字节码文件编译过程 ​ 首先，编写.java文件，通过javac命令将.java文件编译成.class文件（字节码文件）。编译过程只能简单的检查语错误； ​ 其次，java命令去执行.class文件。 ​ 类加载器会进行代码装载，如果类需要跨网络，类加载器将执行安全检查； ​ 字节码校验器将校验代码格式和对象类型转换，并检查是否发生越权访问； ​ 即时编译器会将字节码转换成机器码，如果系统没有即时编译器，java解释器会处理并执行字节码类一个Java程序的基本结构： package xxx; // package 包，此类的路径 import xxx.xxx.Xxxx; //引入其他类 //类名称：书写格式：首字母大写，若类名由多个单词组成每个单词的首字母大写 public class XxxXxx&amp;#123; /* main方法 */ public static void main(String []args) &amp;#123; // 方法体 &amp;#125; &amp;#125; Hello World​ 例子：HelloWorld.java public class HelloWorld&#123; /*第一个Java程序 *它将打印字符串Hello World */ public static void main(String []args)&#123; System.out.println(\"Hello World\");//打印Hello World &#125; &#125; 编译源文件：javac HelloWorld.java 执行class文件java HelloWorld 注释 行注释 // 对某代码进行注释 块注释 /… …/ 注释多行代码或用于说明文件、方法。数据结构等 文档注释 /*… …/用于生成HTML格式的代码报告。必须收发室在类、域、构造函数、方法，以及字段定义之间。","categories":[{"name":"Java学习笔记","slug":"Java学习笔记","permalink":"https://kilitom.github.io/categories/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"-Java","slug":"Java","permalink":"https://kilitom.github.io/tags/Java/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-08-09T11:23:20.000Z","updated":"2020-08-10T00:20:33.108Z","comments":true,"path":"2020/08/09/hello-world/","link":"","permalink":"https://kilitom.github.io/2020/08/09/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new \"My New Post\" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://kilitom.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"}],"tags":[{"name":"-Java","slug":"Java","permalink":"https://kilitom.github.io/tags/Java/"}]},{"title":"我的第一篇博客文章","slug":"我的第一篇博客文章","date":"2020-08-09T11:23:20.000Z","updated":"2020-08-10T00:20:27.388Z","comments":true,"path":"2020/08/09/wo-de-di-yi-pian-bo-ke-wen-zhang/","link":"","permalink":"https://kilitom.github.io/2020/08/09/wo-de-di-yi-pian-bo-ke-wen-zhang/","excerpt":"","text":"##第一章 内容 ##第二章 内容 ##参考文件 www.baidu.com","categories":[{"name":"笔记","slug":"笔记","permalink":"https://kilitom.github.io/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"-Linux","slug":"Linux","permalink":"https://kilitom.github.io/tags/Linux/"}]}],"categories":[{"name":"Java学习笔记","slug":"Java学习笔记","permalink":"https://kilitom.github.io/categories/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"},{"name":"技术分享","slug":"技术分享","permalink":"https://kilitom.github.io/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"笔记","slug":"笔记","permalink":"https://kilitom.github.io/categories/%E7%AC%94%E8%AE%B0/"}],"tags":[{"name":"-Java","slug":"Java","permalink":"https://kilitom.github.io/tags/Java/"},{"name":"-Linux","slug":"Linux","permalink":"https://kilitom.github.io/tags/Linux/"}]}